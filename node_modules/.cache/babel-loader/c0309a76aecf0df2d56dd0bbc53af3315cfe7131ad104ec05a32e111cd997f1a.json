{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xinkal\\\\Desktop\\\\Javscript\\\\ReactProject\\\\src\\\\components\\\\Header\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContainer = styled.div`\n  position: relative;\n`;\nconst SearchBar = styled.input`\n  background-color: #21242d;\n  width: 315px;\n  height: 56px;\n  border-radius: 12px;\n  border: 1px solid rgba(249, 249, 249, 0.1);\n  color: ${({\n  theme\n}) => theme.isDarkMode ? \"#fff\" : \"black\"};\n  background-color: ${({\n  theme\n}) => theme.isDarkMode ? \"#21242D\" : \"#fff\"};\n  filter: ${({\n  theme\n}) => theme.isDarkMode ? \"invert(0)\" : \"invert(1)\"};\n  padding-left: 64px;\n`;\nconst SearchIcon = styled.img`\n  position: absolute;\n  left: 25px;\n  top: 16px;\n`;\nconst KeyIcon = styled.img`\n  position: absolute;\n  left: 270px;\n  top: 16px;\n`;\nconst MovieContainer = styled.div`\n  position: absolute;\n  top: 80px; /* или любое другое значение в зависимости от вашего дизайна */\n  left: 0;\n  width: 100%;\n`;\n_c = MovieContainer;\nconst MovieList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n_c2 = MovieList;\nconst MovieItem = styled.div`\n  text-align: center;\n`;\n_c3 = MovieItem;\nconst Search = ({\n  movieTitle\n}) => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchByName = async () => {\n      const response = await axios.get(`https://www.omdbapi.com/?apikey=8eac0ca3&s=${movieTitle}`);\n      setResults(response.data.Search || []);\n    };\n    if (movieTitle) {\n      fetchByName();\n    } else {\n      setResults([]);\n    }\n  }, [movieTitle]);\n  return /*#__PURE__*/_jsxDEV(MovieContainer, {\n    children: /*#__PURE__*/_jsxDEV(MovieList, {\n      children: results.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title,\n          style: {\n            width: \"100%\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c4 = Search;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MovieContainer\");\n$RefreshReg$(_c2, \"MovieList\");\n$RefreshReg$(_c3, \"MovieItem\");\n$RefreshReg$(_c4, \"Search\");","map":{"version":3,"names":["axios","React","useEffect","useState","styled","jsxDEV","_jsxDEV","SearchContainer","div","SearchBar","input","theme","isDarkMode","SearchIcon","img","KeyIcon","MovieContainer","_c","MovieList","_c2","MovieItem","_c3","Search","movieTitle","_s","results","setResults","fetchByName","response","get","data","children","map","movie","src","Poster","alt","Title","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","imdbID","_c4","$RefreshReg$"],"sources":["C:/Users/Xinkal/Desktop/Javscript/ReactProject/src/components/Header/Search.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  background-color: #21242d;\r\n  width: 315px;\r\n  height: 56px;\r\n  border-radius: 12px;\r\n  border: 1px solid rgba(249, 249, 249, 0.1);\r\n  color: ${({ theme }) => (theme.isDarkMode ? \"#fff\" : \"black\")};\r\n  background-color: ${({ theme }) => (theme.isDarkMode ? \"#21242D\" : \"#fff\")};\r\n  filter: ${({ theme }) => (theme.isDarkMode ? \"invert(0)\" : \"invert(1)\")};\r\n  padding-left: 64px;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n  position: absolute;\r\n  left: 25px;\r\n  top: 16px;\r\n`;\r\n\r\nconst KeyIcon = styled.img`\r\n  position: absolute;\r\n  left: 270px;\r\n  top: 16px;\r\n`;\r\n\r\nconst MovieContainer = styled.div`\r\n  position: absolute;\r\n  top: 80px; /* или любое другое значение в зависимости от вашего дизайна */\r\n  left: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst MovieList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 20px;\r\n`;\r\n\r\nconst MovieItem = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Search = ({ movieTitle }) => {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchByName = async () => {\r\n      const response = await axios.get(\r\n        `https://www.omdbapi.com/?apikey=8eac0ca3&s=${movieTitle}`\r\n      );\r\n\r\n      setResults(response.data.Search || []);\r\n    };\r\n\r\n    if (movieTitle) {\r\n      fetchByName();\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  }, [movieTitle]);\r\n\r\n  return (\r\n    <MovieContainer>\r\n      <MovieList>\r\n        {results.map((movie) => (\r\n          <MovieItem key={movie.imdbID}>\r\n            <img\r\n              src={movie.Poster}\r\n              alt={movie.Title}\r\n              style={{ width: \"100%\", height: \"auto\" }}\r\n            />\r\n            <p>{movie.Title}</p>\r\n          </MovieItem>\r\n        ))}\r\n      </MovieList>\r\n    </MovieContainer>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}