{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xinkal\\\\Downloads\\\\basic\\\\src\\\\MyComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const prevCountRef = useRef();\n  useEffect(() => {\n    prevCountRef.current = count; // Сохраняем предыдущее значение count\n  });\n  const prevCount = prevCountRef.current;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Previous Count: \", prevCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"ASxKwvowIOcjCsM7q0Ue0R+dvXc=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","MyComponent","_s","count","setCount","prevCountRef","current","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Xinkal/Downloads/basic/src/MyComponent.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst MyComponent = () => {\r\n  const [count, setCount] = useState(0);\r\n  const prevCountRef = useRef();\r\n\r\n  useEffect(() => {\r\n    prevCountRef.current = count; // Сохраняем предыдущее значение count\r\n  });\r\n\r\n  const prevCount = prevCountRef.current;\r\n\r\n  return (\r\n    <div>\r\n      <p>Current Count: {count}</p>\r\n      <p>Previous Count: {prevCount}</p>\r\n      <button onClick={() => setCount(count + 1)}>Increment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMO,YAAY,GAAGT,MAAM,CAAC,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACC,OAAO,GAAGH,KAAK,CAAC,CAAC;EAChC,CAAC,CAAC;EAEF,MAAMI,SAAS,GAAGF,YAAY,CAACC,OAAO;EAEtC,oBACEN,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,GAAG,iBAAe,EAACL,KAAK;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BZ,OAAA;MAAAQ,QAAA,GAAG,kBAAgB,EAACD,SAAS;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMT,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAAAK,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACV,EAAA,CAjBID,WAAW;AAAAa,EAAA,GAAXb,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}