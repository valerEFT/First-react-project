{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xinkal\\\\Desktop\\\\Javscript\\\\ReactProject - Copy\\\\src\\\\components\\\\DarkMode.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { enableDarkMode, disableDarkMode } from \"../features/slices/themeSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkMode = () => {\n  _s();\n  const isDarkMode = useSelector(state => state.theme.isDarkMode);\n  const dispatch = useDispatch();\n  const toggleDarkMode = () => {\n    dispatch(isDarkMode ? disableDarkMode() : enableDarkMode());\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDarkMode,\n    children: isDarkMode ? /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"20px\",\n        border: \"#000\"\n      },\n      src: \"/images/lightMode.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"20px\"\n      },\n      src: \"/images/darkMode.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkMode, \"a+1P1fm2DqKjz8FqcyoFKNjPUCg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","enableDarkMode","disableDarkMode","useDispatch","useSelector","LightModeIcon","jsxDEV","_jsxDEV","DarkMode","_s","isDarkMode","state","theme","dispatch","toggleDarkMode","onClick","children","style","width","border","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Xinkal/Desktop/Javscript/ReactProject - Copy/src/components/DarkMode.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { enableDarkMode, disableDarkMode } from \"../features/slices/themeSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\r\n\r\nconst DarkMode = () => {\r\n  const isDarkMode = useSelector((state) => state.theme.isDarkMode);\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleDarkMode = () => {\r\n    dispatch(isDarkMode ? disableDarkMode() : enableDarkMode());\r\n  };\r\n\r\n  return (\r\n    <button onClick={toggleDarkMode}>\r\n      {isDarkMode ? (\r\n        <img\r\n          style={{ width: \"20px\", border: \"#000\" }}\r\n          src=\"/images/lightMode.png\"\r\n        ></img>\r\n      ) : (\r\n        <img style={{ width: \"20px\" }} src=\"/images/darkMode.png\"></img>\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DarkMode;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,eAAe,QAAQ,+BAA+B;AAC/E,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,UAAU,CAAC;EACjE,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BD,QAAQ,CAACH,UAAU,GAAGR,eAAe,CAAC,CAAC,GAAGD,cAAc,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,oBACEM,OAAA;IAAQQ,OAAO,EAAED,cAAe;IAAAE,QAAA,EAC7BN,UAAU,gBACTH,OAAA;MACEU,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAE;MACzCC,GAAG,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,gBAEPjB,OAAA;MAAKU,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MAACE,GAAG,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACf,EAAA,CApBID,QAAQ;EAAA,QACOJ,WAAW,EACbD,WAAW;AAAA;AAAAsB,EAAA,GAFxBjB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}