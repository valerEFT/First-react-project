{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xinkal\\\\Desktop\\\\Javscript\\\\ReactProject\\\\src\\\\pages\\\\SelectedMoviePage\\\\SelectedMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"https://www.omdbapi.com/\";\nconst apiKey = \"?apikey=8eac0ca3\";\nconst SelectedMovie = () => {\n  _s();\n  const {\n    id: movieId\n  } = useParams(); // Извлекаем id из useParams\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await axios.get(`${baseUrl}${apiKey}&i=${movieId}`);\n        if (response.data) {\n          setMovie(response.data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 22\n  }, this); // Проверка на загрузку\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.Year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectedMovie, \"wo8B3je/dkzhD+ixj4qoWdlOx5o=\", false, function () {\n  return [useParams];\n});\n_c = SelectedMovie;\nexport default SelectedMovie;\nvar _c;\n$RefreshReg$(_c, \"SelectedMovie\");","map":{"version":3,"names":["React","useEffect","useState","styled","axios","useParams","jsxDEV","_jsxDEV","baseUrl","apiKey","SelectedMovie","_s","id","movieId","movie","setMovie","fetchMovie","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","Poster","alt","Title","Year","_c","$RefreshReg$"],"sources":["C:/Users/Xinkal/Desktop/Javscript/ReactProject/src/pages/SelectedMoviePage/SelectedMovie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst baseUrl = \"https://www.omdbapi.com/\";\r\nconst apiKey = \"?apikey=8eac0ca3\";\r\n\r\nconst SelectedMovie = () => {\r\n  const { id: movieId } = useParams(); // Извлекаем id из useParams\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const response = await axios.get(`${baseUrl}${apiKey}&i=${movieId}`);\r\n        if (response.data) {\r\n          setMovie(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  if (!movie) return <div>Loading...</div>; // Проверка на загрузку\r\n\r\n  return (\r\n    <div>\r\n      <img src={movie.Poster} alt={movie.Title} />\r\n      <h1>{movie.Title}</h1>\r\n      <p>{movie.Year}</p> {/* Добавьте другую информацию о фильме по желанию */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectedMovie;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,OAAO,GAAG,0BAA0B;AAC1C,MAAMC,MAAM,GAAG,kBAAkB;AAEjC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,EAAE,EAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAGV,OAAO,GAAGC,MAAM,MAAMI,OAAO,EAAE,CAAC;QACpE,IAAII,QAAQ,CAACE,IAAI,EAAE;UACjBJ,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;QACzB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,IAAI,CAACC,KAAK,EAAE,oBAAOP,OAAA;IAAAe,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;;EAE1C,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAKoB,GAAG,EAAEb,KAAK,CAACc,MAAO;MAACC,GAAG,EAAEf,KAAK,CAACgB;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CnB,OAAA;MAAAe,QAAA,EAAKR,KAAK,CAACgB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBnB,OAAA;MAAAe,QAAA,EAAIR,KAAK,CAACiB;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,aAAa;EAAA,QACOL,SAAS;AAAA;AAAA2B,EAAA,GAD7BtB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}