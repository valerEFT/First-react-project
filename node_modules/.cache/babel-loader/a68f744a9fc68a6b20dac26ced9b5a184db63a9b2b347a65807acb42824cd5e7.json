{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keti\\\\Desktop\\\\basic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Checkout from \"./components/Checkout\";\nimport ProductList from \"./components/ProductList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        cartItems: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        setCartItems: setCartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here is Products in Cart-CheckOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkout, {\n        cartItems: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = App;\nexport default App;\n\n/*\n 1.1 შექმენით UserContext.js ფაილი, რომმელშიც შექმენით კოკნტექსტს.\n შექმენით UserContext-ი.\n ამავე ფაილში დაამატეთ UserProvider კომონენტი და useUser custom hook.\n1.2 UserProvidedr-ში მიიღეთ ჩილდრენები და შექმენით user სტეიტი, რომლის საწყისი მნიშვნელობა იქნება null/\n1.3 ამავეე კომპონენტში შექმენით login ფუნქცია, რომელიც მიიღებს username პარამეტრ და ამით დასეტავს იუზერის\n1.4 იგფივე კომპონენტში შექმენით logOut ფუნქცია, რომელიც დასეტავს იუზერს null-ით.\n1.5 komponentidan dდაარეთარნეთ userContext.provider. რომლის ველიუებიც იქნება user, login, logout.\n\n1.6 useUser ჰუკმა დაარეთარნოს useContext ჰუკი და არგუმენტად გადაეცეეს userContext.*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createContext","useState","Navbar","Checkout","ProductList","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cartItems","setCartItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/keti/Desktop/basic/src/App.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/NavBar\";\nimport Checkout from \"./components/Checkout\";\nimport ProductList from \"./components/ProductList\";\n\nfunction App() {\n  const [cartItems, setCartItems] = useState([]);\n  return (\n    <>\n      <div className=\"App\">\n        <Navbar cartItems={cartItems} />\n        <ProductList setCartItems={setCartItems} />\n        <h1>Here is Products in Cart-CheckOut</h1>\n        <Checkout cartItems={cartItems} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n/*\n 1.1 შექმენით UserContext.js ფაილი, რომმელშიც შექმენით კოკნტექსტს.\n შექმენით UserContext-ი.\n ამავე ფაილში დაამატეთ UserProvider კომონენტი და useUser custom hook.\n1.2 UserProvidedr-ში მიიღეთ ჩილდრენები და შექმენით user სტეიტი, რომლის საწყისი მნიშვნელობა იქნება null/\n1.3 ამავეე კომპონენტში შექმენით login ფუნქცია, რომელიც მიიღებს username პარამეტრ და ამით დასეტავს იუზერის\n1.4 იგფივე კომპონენტში შექმენით logOut ფუნქცია, რომელიც დასეტავს იუზერს null-ით.\n1.5 komponentidan dდაარეთარნეთ userContext.provider. რომლის ველიუებიც იქნება user, login, logout.\n\n1.6 useUser ჰუკმა დაარეთარნოს useContext ჰუკი და არგუმენტად გადაეცეეს userContext.*/\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,oBACEK,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAKQ,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBP,OAAA,CAACJ,MAAM;QAACS,SAAS,EAAEA;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChCZ,OAAA,CAACF,WAAW;QAACQ,YAAY,EAAEA;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CZ,OAAA;QAAAO,QAAA,EAAI;MAAiC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CZ,OAAA,CAACH,QAAQ;QAACQ,SAAS,EAAEA;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC,gBACN,CAAC;AAEP;AAACR,EAAA,CAZQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAcZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}