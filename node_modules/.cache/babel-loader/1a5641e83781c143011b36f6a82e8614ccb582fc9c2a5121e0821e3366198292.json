{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xinkal\\\\Desktop\\\\Javscript\\\\ReactProject\\\\src\\\\components\\\\functions\\\\Rating.jsx\";\nimport React from \"react\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport StarBorderRoundedIcon from \"@mui/icons-material/StarBorderRounded\";\nimport StarHalfRoundedIcon from \"@mui/icons-material/StarHalfRounded\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rating = ({\n  imdbRating\n}) => {\n  const normalizedRating = parseFloat(imdbRating) / 2; // Делим на 2 и приводим к числу\n  const fullStars = Math.floor(normalizedRating);\n  const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0; // Проверяем, есть ли половинка\n  const emptyStars = 5 - fullStars - halfStar; // Оставшиеся пустые звезды\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [[...Array(fullStars)].map((_, index) => /*#__PURE__*/_jsxDEV(StarIcon, {}, `full-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), halfStar === 1 && /*#__PURE__*/_jsxDEV(StarHalfRoundedIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 26\n    }, this), [...Array(emptyStars)].map((_, index) => /*#__PURE__*/_jsxDEV(StarBorderRoundedIcon, {}, `empty-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Rating;\nexport default Rating;\nvar _c;\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"names":["React","StarIcon","StarBorderRoundedIcon","StarHalfRoundedIcon","jsxDEV","_jsxDEV","Rating","imdbRating","normalizedRating","parseFloat","fullStars","Math","floor","halfStar","emptyStars","children","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Xinkal/Desktop/Javscript/ReactProject/src/components/functions/Rating.jsx"],"sourcesContent":["import React from \"react\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport StarBorderRoundedIcon from \"@mui/icons-material/StarBorderRounded\";\r\nimport StarHalfRoundedIcon from \"@mui/icons-material/StarHalfRounded\";\r\n\r\nconst Rating = ({ imdbRating }) => {\r\n  const normalizedRating = parseFloat(imdbRating) / 2; // Делим на 2 и приводим к числу\r\n  const fullStars = Math.floor(normalizedRating);\r\n  const halfStar = normalizedRating % 1 >= 0.5 ? 1 : 0; // Проверяем, есть ли половинка\r\n  const emptyStars = 5 - fullStars - halfStar; // Оставшиеся пустые звезды\r\n\r\n  return (\r\n    <div>\r\n      {[...Array(fullStars)].map((_, index) => (\r\n        <StarIcon key={`full-${index}`} />\r\n      ))}\r\n      {halfStar === 1 && <StarHalfRoundedIcon />}\r\n      {[...Array(emptyStars)].map((_, index) => (\r\n        <StarBorderRoundedIcon key={`empty-${index}`} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rating;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,mBAAmB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACjC,MAAMC,gBAAgB,GAAGC,UAAU,CAACF,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;EACrD,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC;EAC9C,MAAMK,QAAQ,GAAGL,gBAAgB,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACtD,MAAMM,UAAU,GAAG,CAAC,GAAGJ,SAAS,GAAGG,QAAQ,CAAC,CAAC;;EAE7C,oBACER,OAAA;IAAAU,QAAA,GACG,CAAC,GAAGC,KAAK,CAACN,SAAS,CAAC,CAAC,CAACO,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAClCd,OAAA,CAACJ,QAAQ,MAAM,QAAQkB,KAAK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAClC,CAAC,EACDV,QAAQ,KAAK,CAAC,iBAAIR,OAAA,CAACF,mBAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzC,CAAC,GAAGP,KAAK,CAACF,UAAU,CAAC,CAAC,CAACG,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnCd,OAAA,CAACH,qBAAqB,MAAM,SAASiB,KAAK,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAjBIlB,MAAM;AAmBZ,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}